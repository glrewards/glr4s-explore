/**
 * GLR 4 Schools
 * **NUMBER ONE TOPIC IS HOW BEST TO IMPLEMENT THESE API so that only data is segregated by school.**  Need to implement a form of authentication check PER SCHOOL. Is there a way to leverage the authorisation process implement by Group Call Xporter? This is the full set of API for GLR 4 Schools. Security definitions and exqmples need to be added.
 *
 * The version of the OpenAPI document: 1.0.1-oas3
 * Contact: john@greatlittlerewards.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import ProductImage from './ProductImage';
import Variant from './Variant';

/**
 * The Product model module.
 * @module //Product
 * @version 1.0.1-oas3
 */
class Product {
    /**
     * Constructs a new <code>Product</code>.
     * @alias module://Product
     * @param shopifyId {String}
     * @param title {String}
     */
    constructor(shopifyId, title) {

        Product.initialize(this, shopifyId, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, shopifyId, title) {
        obj['shopifyId'] = shopifyId;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module://Product} obj Optional instance to populate.
     * @return {module://Product} The populated <code>Product</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Product();

            if (data.hasOwnProperty('shopifyId')) {
                obj['shopifyId'] = ApiClient.convertToType(data['shopifyId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('shopifyProductType')) {
                obj['shopifyProductType'] = ApiClient.convertToType(data['shopifyProductType'], 'String');
            }
            if (data.hasOwnProperty('handle')) {
                obj['handle'] = ApiClient.convertToType(data['handle'], 'String');
            }
            if (data.hasOwnProperty('hasOnlyDefaultVariant')) {
                obj['hasOnlyDefaultVariant'] = ApiClient.convertToType(data['hasOnlyDefaultVariant'], 'Boolean');
            }
            if (data.hasOwnProperty('hasOutOfStockVariants')) {
                obj['hasOutOfStockVariants'] = ApiClient.convertToType(data['hasOutOfStockVariants'], 'Boolean');
            }
            if (data.hasOwnProperty('glrPoints')) {
                obj['glrPoints'] = ApiClient.convertToType(data['glrPoints'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('descriptionHtml')) {
                obj['descriptionHtml'] = ApiClient.convertToType(data['descriptionHtml'], 'String');
            }
            if (data.hasOwnProperty('descriptionPlainSummary')) {
                obj['descriptionPlainSummary'] = ApiClient.convertToType(data['descriptionPlainSummary'], 'String');
            }
            if (data.hasOwnProperty('featuredImage')) {
                obj['featuredImage'] = ProductImage.constructFromObject(data['featuredImage']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [ProductImage]);
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], [Variant]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} shopifyId
 */
Product.prototype['shopifyId'] = undefined;

/**
 * @member {String} title
 */
Product.prototype['title'] = undefined;

/**
 * @member {String} shopifyProductType
 */
Product.prototype['shopifyProductType'] = undefined;

/**
 * @member {String} handle
 */
Product.prototype['handle'] = undefined;

/**
 * @member {Boolean} hasOnlyDefaultVariant
 */
Product.prototype['hasOnlyDefaultVariant'] = undefined;

/**
 * @member {Boolean} hasOutOfStockVariants
 */
Product.prototype['hasOutOfStockVariants'] = undefined;

/**
 * @member {Number} glrPoints
 */
Product.prototype['glrPoints'] = undefined;

/**
 * @member {String} description
 */
Product.prototype['description'] = undefined;

/**
 * @member {String} descriptionHtml
 */
Product.prototype['descriptionHtml'] = undefined;

/**
 * @member {String} descriptionPlainSummary
 */
Product.prototype['descriptionPlainSummary'] = undefined;

/**
 * @member {module:ProductImage} featuredImage
 */
Product.prototype['featuredImage'] = undefined;

/**
 * @member {Array.<module:ProductImage>} images
 */
Product.prototype['images'] = undefined;

/**
 * @member {Array.<module:Variant>} variants
 */
Product.prototype['variants'] = undefined;






export default Product;

