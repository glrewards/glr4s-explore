/**
 * GLR 4 Schools
 * **NUMBER ONE TOPIC IS HOW BEST TO IMPLEMENT THESE API so that only data is segregated by school.**  Need to implement a form of authentication check PER SCHOOL. Is there a way to leverage the authorisation process implement by Group Call Xporter? This is the full set of API for GLR 4 Schools. Security definitions and exqmples need to be added.
 *
 * The version of the OpenAPI document: 1.0.1-oas3
 * Contact: john@greatlittlerewards.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Body from './Body';
import Cart from './Cart';
import InlineResponse200 from './InlineResponse200';
import LineItem from './LineItem';
import Menu from './Menu';
import Order from './Order';
import Page from './Page';
import Product from './Product';
import ProductCollection from './ProductCollection';
import ProductImage from './ProductImage';
import School from './School';
import Student from './Student';
import User from './User';
import Variant from './Variant';
import CartApi from './CartApi';
import ExperienceApiApi from './ExperienceApiApi';
import ProcessApiApi from './ProcessApiApi';
import ProductApi from './ProductApi';
import SchoolApi from './SchoolApi';
import StoreApi from './StoreApi';
import StudentApi from './StudentApi';
import SystemApiApi from './SystemApiApi';


/**
* .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Glr4Schools = require('/index'); // See note below*.
* var xxxSvc = new Glr4Schools.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Glr4Schools.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Glr4Schools.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Glr4Schools.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module /index
* @version 1.0.1-oas3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:/ApiClient}
     */
    ApiClient,

    /**
     * The Body model constructor.
     * @property {module://Body}
     */
    Body,

    /**
     * The Cart model constructor.
     * @property {module://Cart}
     */
    Cart,

    /**
     * The InlineResponse200 model constructor.
     * @property {module://InlineResponse200}
     */
    InlineResponse200,

    /**
     * The LineItem model constructor.
     * @property {module://LineItem}
     */
    LineItem,

    /**
     * The Menu model constructor.
     * @property {module://Menu}
     */
    Menu,

    /**
     * The Order model constructor.
     * @property {module://Order}
     */
    Order,

    /**
     * The Page model constructor.
     * @property {module://Page}
     */
    Page,

    /**
     * The Product model constructor.
     * @property {module://Product}
     */
    Product,

    /**
     * The ProductCollection model constructor.
     * @property {module://ProductCollection}
     */
    ProductCollection,

    /**
     * The ProductImage model constructor.
     * @property {module://ProductImage}
     */
    ProductImage,

    /**
     * The School model constructor.
     * @property {module://School}
     */
    School,

    /**
     * The Student model constructor.
     * @property {module://Student}
     */
    Student,

    /**
     * The User model constructor.
     * @property {module://User}
     */
    User,

    /**
     * The Variant model constructor.
     * @property {module://Variant}
     */
    Variant,

    /**
    * The CartApi service constructor.
    * @property {module://CartApi}
    */
    CartApi,

    /**
    * The ExperienceApiApi service constructor.
    * @property {module://ExperienceApiApi}
    */
    ExperienceApiApi,

    /**
    * The ProcessApiApi service constructor.
    * @property {module://ProcessApiApi}
    */
    ProcessApiApi,

    /**
    * The ProductApi service constructor.
    * @property {module://ProductApi}
    */
    ProductApi,

    /**
    * The SchoolApi service constructor.
    * @property {module://SchoolApi}
    */
    SchoolApi,

    /**
    * The StoreApi service constructor.
    * @property {module://StoreApi}
    */
    StoreApi,

    /**
    * The StudentApi service constructor.
    * @property {module://StudentApi}
    */
    StudentApi,

    /**
    * The SystemApiApi service constructor.
    * @property {module://SystemApiApi}
    */
    SystemApiApi
};
