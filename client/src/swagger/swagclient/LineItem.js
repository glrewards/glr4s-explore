/**
 * GLR 4 Schools
 * **NUMBER ONE TOPIC IS HOW BEST TO IMPLEMENT THESE API so that only data is segregated by school.**  Need to implement a form of authentication check PER SCHOOL. Is there a way to leverage the authorisation process implement by Group Call Xporter? This is the full set of API for GLR 4 Schools. Security definitions and exqmples need to be added.
 *
 * The version of the OpenAPI document: 1.0.1-oas3
 * Contact: john@greatlittlerewards.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';

/**
 * The LineItem model module.
 * @module //LineItem
 * @version 1.0.1-oas3
 */
class LineItem {
    /**
     * Constructs a new <code>LineItem</code>.
     * @alias module://LineItem
     */
    constructor() {

        LineItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) {
    }

    /**
     * Constructs a <code>LineItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module://LineItem} obj Optional instance to populate.
     * @return {module://LineItem} The populated <code>LineItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItem();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('productTitle')) {
                obj['productTitle'] = ApiClient.convertToType(data['productTitle'], 'String');
            }
            if (data.hasOwnProperty('variantId')) {
                obj['variantId'] = ApiClient.convertToType(data['variantId'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('glrpoints')) {
                obj['glrpoints'] = ApiClient.convertToType(data['glrpoints'], 'Number');
            }
            if (data.hasOwnProperty('studentId')) {
                obj['studentId'] = ApiClient.convertToType(data['studentId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Id
 */
LineItem.prototype['Id'] = undefined;

/**
 * this holds a shopify GUID
 * @member {String} productId
 */
LineItem.prototype['productId'] = undefined;

/**
 * @member {String} productTitle
 */
LineItem.prototype['productTitle'] = undefined;

/**
 * this is the critical attribute we allways purchase a variant even if it is the default variant
 * @member {String} variantId
 */
LineItem.prototype['variantId'] = undefined;

/**
 * @member {Number} quantity
 */
LineItem.prototype['quantity'] = undefined;

/**
 * @member {Number} glrpoints
 */
LineItem.prototype['glrpoints'] = undefined;

/**
 * @member {String} studentId
 */
LineItem.prototype['studentId'] = undefined;






export default LineItem;

